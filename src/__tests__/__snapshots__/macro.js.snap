// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macros as function: as function 1`] = `

const myPreval = require('../macro')

const x = myPreval(\`
  module.exports = require('./fixtures/identity')({sayHi: () => 'hi'})
\`)

      ↓ ↓ ↓ ↓ ↓ ↓

const x = {
  "sayHi": () => 'hi'
};

`;

exports[`macros as jsx: as jsx 1`] = `

const Preval = require('../macro')

const ui = (
  <Preval>
    const fs = require('fs')
    module.exports = fs.readFileSync(require.resolve('./fixtures/fixture1.md'), 'utf8')
  </Preval>
)

      ↓ ↓ ↓ ↓ ↓ ↓

const ui = <div>"# fixture\\n\\nThis is some file thing...\\n"</div>;

`;

exports[`macros as tag: as tag 1`] = `

import preval from '../macro'

const x = preval\`module.exports = require('./fixtures/compute-one')\`

      ↓ ↓ ↓ ↓ ↓ ↓

const x = 1;

`;

exports[`macros error for other nodes: error for other nodes 1`] = `

const preval = require('../macro')

x = 3 + preval

      ↓ ↓ ↓ ↓ ↓ ↓

Error: <PROJECT_ROOT>/src/__tests__/macro.js: ../macro: babel-plugin-preval/macro can only be used as tagged template expression, function call or JSX element. You tried BinaryExpression.

`;
